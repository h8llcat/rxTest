package sapotero.rxtest.db.Storio.entities;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;

import com.pushtorefresh.storio.sqlite.annotations.StorIOSQLiteColumn;
import com.pushtorefresh.storio.sqlite.annotations.StorIOSQLiteType;

import sapotero.rxtest.db.Storio.tables.AuthTable;

@StorIOSQLiteType(table = AuthTable.TABLE)
public class Auth {


  /**
   * If object was not inserted into db, id will be null
   */
  @Nullable
  @StorIOSQLiteColumn(name = AuthTable.COLUMN_ID, key = true)
  Long id;

  @NonNull
  @StorIOSQLiteColumn(name = AuthTable.COLUMN_LOGIN)
  String login;

  @NonNull
  @StorIOSQLiteColumn(name = AuthTable.COLUMN_PASSWORD)
  String password;

  @NonNull
  @StorIOSQLiteColumn(name = AuthTable.COLUMN_COLLEAGUE_LOGIN)
  String colleague_login;

  @NonNull
  @StorIOSQLiteColumn(name = AuthTable.COLUMN_COLLEAGUE_PASSWORD)
  String colleague_password;

  // leave default constructor for AutoGenerated code!
  Auth() {
  }

  private Auth(@Nullable Long id, @NonNull String login, @NonNull String password, @NonNull String colleague_author, @NonNull String colleague_password) {
    this.id = id;
    this.login = login;
    this.password = password;
    this.colleague_login = colleague_author;
    this.colleague_password = colleague_password;
  }

  @NonNull
  public static Auth newAuth(@Nullable Long id, @NonNull String login, @NonNull String password, @NonNull String colleague_login, @NonNull String colleague_password) {
    return new Auth(id, login, password, colleague_login, colleague_password);
  }

  @NonNull
  public static Auth newAuth(@NonNull String login, @NonNull String password, @NonNull String colleague_login, @NonNull String colleague_password) {
    return new Auth(null, login, password, colleague_login, colleague_password);
  }

  @NonNull
  public static Auth newAuth(@NonNull String login, @NonNull String password) {
    return new Auth(null, login, password, null, null);
  }

  @Nullable
  public Long id() {
    return id;
  }

  @NonNull
  public String login() {
    return login;
  }

  @NonNull
  public String password() {
    return password;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) return true;
    if (o == null || getClass() != o.getClass()) return false;

    Auth auth = (Auth) o;

    return id != null ? id.equals(auth.id) : auth.id == null && login.equals(auth.login) && password.equals(auth.password);
  }

  @Override
  public int hashCode() {
    int result = id != null ? id.hashCode() : 0;
    result = 31 * result + login.hashCode();
    result = 31 * result + password.hashCode();
    return result;
  }

  @Override
  public String toString() {
    return "Auth{" +
      "id=" + id +
      ", login='" + login + '\'' +
      ", password='" + password + '\'' +
      '}';
  }
}
